#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BVPS.DB.DBContext
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="htss")]
	public partial class QuanLyFileDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertdtb_patient_document(dtb_patient_document instance);
    partial void Updatedtb_patient_document(dtb_patient_document instance);
    partial void Deletedtb_patient_document(dtb_patient_document instance);
    partial void Insertdtb_doc_type(dtb_doc_type instance);
    partial void Updatedtb_doc_type(dtb_doc_type instance);
    partial void Deletedtb_doc_type(dtb_doc_type instance);
    #endregion
		
		public QuanLyFileDataContext() : 
				base(global::BVPS.DB.Properties.Settings.Default.htssConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyFileDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyFileDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyFileDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyFileDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<dtb_patient_document> dtb_patient_documents
		{
			get
			{
				return this.GetTable<dtb_patient_document>();
			}
		}
		
		public System.Data.Linq.Table<dtb_doc_type> dtb_doc_types
		{
			get
			{
				return this.GetTable<dtb_doc_type>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dtb_patient_documents")]
	public partial class dtb_patient_document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _doc_id;
		
		private string _patient_code;
		
		private string _file_name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ondoc_idChanging(System.Nullable<int> value);
    partial void Ondoc_idChanged();
    partial void Onpatient_codeChanging(string value);
    partial void Onpatient_codeChanged();
    partial void Onfile_nameChanging(string value);
    partial void Onfile_nameChanged();
    #endregion
		
		public dtb_patient_document()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doc_id", DbType="Int")]
		public System.Nullable<int> doc_id
		{
			get
			{
				return this._doc_id;
			}
			set
			{
				if ((this._doc_id != value))
				{
					this.Ondoc_idChanging(value);
					this.SendPropertyChanging();
					this._doc_id = value;
					this.SendPropertyChanged("doc_id");
					this.Ondoc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_code", DbType="VarChar(100)")]
		public string patient_code
		{
			get
			{
				return this._patient_code;
			}
			set
			{
				if ((this._patient_code != value))
				{
					this.Onpatient_codeChanging(value);
					this.SendPropertyChanging();
					this._patient_code = value;
					this.SendPropertyChanged("patient_code");
					this.Onpatient_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_file_name", DbType="VarChar(200)")]
		public string file_name
		{
			get
			{
				return this._file_name;
			}
			set
			{
				if ((this._file_name != value))
				{
					this.Onfile_nameChanging(value);
					this.SendPropertyChanging();
					this._file_name = value;
					this.SendPropertyChanged("file_name");
					this.Onfile_nameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dtb_doc_types")]
	public partial class dtb_doc_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _doc_name;
		
		private System.Nullable<int> _doc_type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ondoc_nameChanging(string value);
    partial void Ondoc_nameChanged();
    partial void Ondoc_typeChanging(System.Nullable<int> value);
    partial void Ondoc_typeChanged();
    #endregion
		
		public dtb_doc_type()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doc_name", DbType="NVarChar(200)")]
		public string doc_name
		{
			get
			{
				return this._doc_name;
			}
			set
			{
				if ((this._doc_name != value))
				{
					this.Ondoc_nameChanging(value);
					this.SendPropertyChanging();
					this._doc_name = value;
					this.SendPropertyChanged("doc_name");
					this.Ondoc_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doc_type", DbType="Int")]
		public System.Nullable<int> doc_type
		{
			get
			{
				return this._doc_type;
			}
			set
			{
				if ((this._doc_type != value))
				{
					this.Ondoc_typeChanging(value);
					this.SendPropertyChanging();
					this._doc_type = value;
					this.SendPropertyChanged("doc_type");
					this.Ondoc_typeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
